(in-package :vgm)

(defun load-file (filespec)
  "Load a binary file into memory."
  (with-open-file (input filespec
			 :element-type '(unsigned-byte 8))
    (loop
       :with output = (make-array 0
				  :element-type '(unsigned-byte 8)
				  :adjustable t
				  :fill-pointer 0)
       :for byte = (read-byte input nil nil)
       :while byte
       :do (vector-push-extend byte output)
       :finally (return output))))
    
(defun read-bytes (stream &optional (bytes 1) (endianness 'little))
  "Read a number of bytes from a stream."
  (declare (type (member little big) endianness))
  (loop
     :with data = 0
     :for x :from 0 :to (1- bytes)
     :for y :from (1- bytes) :downto 0
     :for offset = (case endianness
		     (big y)
		     (little x))
     :do (setf (ldb (byte 8 (* 8 offset)) data)
	       (read-byte stream))
     :finally (return data)))

(defun read-vgm-header (stream)
  "Read a vgm header from a stream."
  (make-vgm-header
   :fcc-vgm              (read-bytes stream 4)
   :lng-eof-offset       (read-bytes stream 4)
   :lng-version          (read-bytes stream 4)
   :lng-hz-psg           (read-bytes stream 4)
   :lng-hz-ym2413        (read-bytes stream 4)
   :lng-gd3-offset       (read-bytes stream 4)
   :lng-total-samples    (read-bytes stream 4)
   :lng-loop-offset      (read-bytes stream 4)
   :lng-loop-samples     (read-bytes stream 4)
   :lng-rate             (read-bytes stream 4)
   :sht-psg-feedback     (read-bytes stream 2)
   :byt-psg-sr-width     (read-bytes stream 1)
   :byt-psg-flags        (read-bytes stream 1)
   :lng-hz-ym2612        (read-bytes stream 4)
   :lng-hz-ym2151        (read-bytes stream 4)
   :lng-data-offset      (read-bytes stream 4)
   :lng-hz-spcm          (read-bytes stream 4)
   :lng-spcm-intf        (read-bytes stream 4)
   :lng-hz-rf5c68        (read-bytes stream 4)
   :lng-hz-ym2203        (read-bytes stream 4)
   :lng-hz-ym2608        (read-bytes stream 4)
   :lng-hz-ym2610        (read-bytes stream 4)
   :lng-hz-ym3812        (read-bytes stream 4)
   :lng-hz-ym3526        (read-bytes stream 4)
   :lng-hz-y8950         (read-bytes stream 4)
   :lng-hz-ymf262        (read-bytes stream 4)
   :lng-hz-ymf278b       (read-bytes stream 4)
   :lng-hz-ymf271        (read-bytes stream 4)
   :lng-hz-ymz280b       (read-bytes stream 4)
   :lng-hz-rf5c164       (read-bytes stream 4)
   :lng-hz-pwm           (read-bytes stream 4)
   :lng-hz-ay8910        (read-bytes stream 4)
   :byt-ay-type          (read-bytes stream 1)
   :byt-ay-flag          (read-bytes stream 1)
   :byt-ay-flag-ym2203   (read-bytes stream 1)
   :byt-ay-flag-ym2608   (read-bytes stream 1)
   :byt-volume-modifier  (read-bytes stream 1)
   :byt-reserved-2       (read-bytes stream 1)
   :byt-loop-base        (read-bytes stream 1)
   :byt-loop-modifier    (read-bytes stream 1)
   :lng-hz-gb-dmg        (read-bytes stream 4)
   :lng-hz-nes-apu       (read-bytes stream 4)
   :lng-hz-multi-pcm     (read-bytes stream 4)
   :lng-hz-upd7759       (read-bytes stream 4)
   :lng-hz-okim6258      (read-bytes stream 4)
   :byt-oki6258-flags    (read-bytes stream 1)
   :byt-k054539-flags    (read-bytes stream 1)
   :byt-c140-type        (read-bytes stream 1)
   :byt-reserved-flags   (read-bytes stream 1)
   :lng-hz-okim6295      (read-bytes stream 4)
   :lng-hz-k051649       (read-bytes stream 4)
   :lng-hz-k054539       (read-bytes stream 4)
   :lng-hz-huc6280       (read-bytes stream 4)
   :lng-hz-c140          (read-bytes stream 4)
   :lng-hz-k053260       (read-bytes stream 4)
   :lng-hz-pokey         (read-bytes stream 4)
   :lng-hz-qsound        (read-bytes stream 4)
   :lng-hz-scsp          (read-bytes stream 4)
   :lng-extra-offset     (read-bytes stream 4)
   :lng-hz-wswan         (read-bytes stream 4)
   :lng-hz-vsu           (read-bytes stream 4)
   :lng-hz-saa1099       (read-bytes stream 4)
   :lng-hz-es5503        (read-bytes stream 4)
   :lng-hz-es5506        (read-bytes stream 4)
   :byt-es5503-chns      (read-bytes stream 1)
   :byt-es5506-chns      (read-bytes stream 1)
   :byt-c352-clk-div     (read-bytes stream 1)
   :byt-es-reserved      (read-bytes stream 1)
   :lng-hz-x1-010        (read-bytes stream 4)
   :lng-hz-c352          (read-bytes stream 4)
   :lng-hz-ga20          (read-bytes stream 4)))

(defun parse-vgm-file (data)
  "Parse vgm file data.")

(defun load-vgm-file (filespec)
  "Load a vgm file."
  (let ((data (load-file filespec)))
    (parse-vgm-file data)))

;(load-file "test/song.vgm")
